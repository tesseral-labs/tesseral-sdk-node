/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Tesseral from "../../api/index";
import * as core from "../../core";

export const AuditLogEvent: core.serialization.ObjectSchema<serializers.AuditLogEvent.Raw, Tesseral.AuditLogEvent> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        organizationId: core.serialization.string().optional(),
        actorUserId: core.serialization.string().optional(),
        actorSessionId: core.serialization.string().optional(),
        actorApiKeyId: core.serialization.string().optional(),
        actorBackendApiKeyId: core.serialization.string().optional(),
        actorIntermediateSessionId: core.serialization.string().optional(),
        eventTime: core.serialization.date().optional(),
        eventName: core.serialization.string().optional(),
        eventDetails: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        actorCredentials: core.serialization.string().optional(),
    });

export declare namespace AuditLogEvent {
    export interface Raw {
        id?: string | null;
        organizationId?: string | null;
        actorUserId?: string | null;
        actorSessionId?: string | null;
        actorApiKeyId?: string | null;
        actorBackendApiKeyId?: string | null;
        actorIntermediateSessionId?: string | null;
        eventTime?: string | null;
        eventName?: string | null;
        eventDetails?: Record<string, unknown> | null;
        actorCredentials?: string | null;
    }
}
